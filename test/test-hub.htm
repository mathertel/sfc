<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <title>data-hub Test Page</title>

  <link Content-Type="text/css" href="/docstyle.css" rel="stylesheet" />
  <style>
    xcode[is='u-code'] {
      box-shadow: 0 0 0.1rem 0.2rem lime;
    }
  </style>
  <script src="/loader.js"></script>
  <!-- <script src="/data-hub.js" type="module"></script> -->
  <script>
    // var allSFCLoaded = window.loadComponent('u-code');
  </script>
</head>

<body class="sitelayout" style="--main-width: 60em">
  <header>
    <h1>data-hub Test Page</h1>
  </header>

  <main>
    <nav>
      <button id="set1">set1</button>
      <button id="set2">set2</button>
      <button id="getJson">json</button>
      <button id="hubReplay">replay</button>
      <button id="hubUnsubscribe">unsubscribe Age</button>
    </nav>

    <hr />
    <div><label for="rawview">person.name: <span id="personName">...</span></label></div>
    <div><label for="rawview">person.age: <span id="personAge">...</span></label></div>

    <hr />
    <div><label for="rawview">Data</label></div>
    <pre><code id="rawview"></code></pre>

    <hr />
    <div><label for="logview">Log:</label></div>
    <pre id="logview"></pre>


  </main>

  <script type="module">
    import { DataHub } from '/data-hub.js';
    window.datahub.configurePersistence(sessionStorage, "datahub_store");

    const rawObj = document.querySelector('#rawview');
    const logObj = document.querySelector('#logview');

    const rawData1 = { person: { name: 'John Doe', age: 30, city: 'New York', hobby: 'reading' } };
    const rawData2 = { person: { name: 'Max Dose', age: 40, city: 'Boston', hobby: 'writing' } };
    let subAge;

    function rawCallback(path, value) {
      // debugger;
      if (typeof value === 'object') {
        logObj.textContent += `\n ${path}=${JSON.stringify(value)}`;
      } else {
        logObj.textContent += `\n { ${path}='${value}' }`;
      }
    }


    // read data from path and compare by converting to JSON strings.
    function expectData(dh, path, expected) {
      const v = JSON.stringify(dh.get(path));
      expected = JSON.stringify(expected);

      if (v !== expected) {
        console.error(`Test failed: get('${path}') returned '${v}' expected '${expected}'`);
      } else {
        console.debug(`Test passed: get('${path}') returned '${v}'`);
      }
    } // expectData


    function expectCallback(dh, path, expected) {
      expected = JSON.stringify(expected);
      dh.subscribe(path, (p, v) => {
        v = JSON.stringify(v);

        if (v !== expected) {
          console.error(`Test failed: subscribe('${path}') returned '${v}' expected '${expected}'`);
        } else {
          console.debug(`Test passed: subscribe('${path}') returned '${v}'`);
        }
      });
    } // expectCallback()


    function test01(dh) {
      console.group("test-01");
      dh.clear();

      expectData(dh, "", {});
      expectCallback(dh, "", { "a": 1 });
      expectCallback(dh, "a", 1);
      expectCallback(dh, "[a]", 1);
      expectCallback(dh, "/a", 1);
      expectCallback(dh, ".a", 1);
      dh.publish("", { "a": 1 });

      expectData(dh, "a", 1);
      expectData(dh, "", { "a": 1 });
      console.log("Test 1 done.");
      console.groupEnd();
    } // test01


    function test02(dh) {
      console.group("test-02");
      dh.clear();

      expectData(dh, "", {});
      expectCallback(dh, "", {"obj":{"a":1}});
      expectCallback(dh, "obj", {"a":1});
      expectCallback(dh, "[obj]", 1);
      expectCallback(dh, "obj/a", 2);
      expectCallback(dh, ".a", 1);
      dh.publish("", { "obj" : {"a": 1 }});

      // expectData(dh, "a", 1);
      // expectData(dh, "", { "a": 1 });
      console.log("Test 1 done.");
      console.groupEnd();
    } // test02

    function test99(dh) {
      console.groupCollapsed("test-99");
      dh.clear();

      // setup subscription with callback
      // dh.subscribe("**", rawCallback);
      dh.subscribe("", rawCallback);
      dh.subscribe("", (p, v) => { rawObj.textContent = JSON.stringify(v, null, 2); });

      dh.subscribe("person.name", (p, v) => { document.querySelector('#personName').textContent = v; });
      subAge = dh.subscribe("person.age", (p, v) => { document.querySelector('#personAge').textContent = v; });

      dh.publish("", { "a": 1 });
      dh.publish("", { "A": 0 });
      dh.publish("", { "a": 2 });
      dh.publish("", { "b": 2, "c": 40 });
      dh.publish("", { "b": undefined });
      dh.publish("", { "age": 42 });
      dh.publish("a", 3);

      dh.publish("", { "o": { "b": 4 } });
      dh.publish("", { "O": { "b": 5 } });
      dh.publish("", { "o": { "c": 50 } });
      dh.publish("o.c", 51);
      console.log(dh.get("o"));
      console.log(dh.get("o.c"));
      console.log(dh.get("o.none"));
      dh.publish("", { "p": {} });
      dh.publish("", { "o": { "c": "call-me" } });
      dh.publish("", { "o": { "c": undefined } });

      dh.publish("", { "l": [] });
      dh.publish("", { "l": ["tag1", "tag2"] });
      dh.publish("l.4", "tag4");

      const a = new Array(); a[7] = "tag7";
      dh.publish("", { "l": a });

      console.groupEnd();

    }


    window.addEventListener('DOMContentLoaded', function() {
      // debugger;

      test01(window.datahub);
      test02(window.datahub);

      test99(window.datahub);


    });


    document.querySelector('#set1').addEventListener('click', function() {
      window.datahub.publish("", rawData1);
    });

    document.querySelector('#set2').addEventListener('click', function() {
      window.datahub.publish("", rawData2);
    });

    document.querySelector('#getJson').addEventListener('click', function() {
      let d1 = window.datahub.get('a');
      d1 = window.datahub.get('a[0]');
      d1 = window.datahub.get('a[1]');
      d1 = window.datahub.get('a[0].b');
      d1 = window.datahub.get('a[0]["b"]');
      d1 = window.datahub.get('a[0].b');
      const ds = window.datahub.get('person');
      rawObj.textContent = JSON.stringify(ds, null, 2);
    });

    document.querySelector('#hubReplay').addEventListener('click', function() {
      window.datahub.replay("");
    });

    document.querySelector('#hubUnsubscribe').addEventListener('click', function() {
      window.datahub.unsubscribe(subAge);
    });

  </script>
</body>

</html>