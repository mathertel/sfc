<!--

File: u-duration.sfc

Copyright (c) 2025 by Matthias Hertel, http://www.mathertel.de
This work is licensed under a BSD-3-Clause license. See http://www.mathertel.de/License.aspx

-->

<style>
</style>

<script extends="input">
  export default class UDuration extends HTMLInputElement {

    connectedCallback() {
      console.log('u-duration', 'connected', this);
      this.addEventListener('change', this._onChange);

      if (!this.title) {
        this.title = 'Enter duration using the format HH:MM:SS or seconds as number.';
      }
      if (!this.placeholder) {
        this.placeholder = 'HH:MM:SS';
      }
    }

    _f2(d) {
      d = String(Math.floor(d));
      if (d.length < 2) d = '0' + d;
      return (d);
    }

    // parse ISO 8601 duration or HH:MM:SS format and return value as Seconds
    _asSeconds(v) {
      function _num(s) {
        let ret = 0;
        if (s) {
          const r = s.match(/^(\d+)/);
          if (r) ret = Number(r[1]);
        }
        return (ret);
      }

      v = v.trim().toUpperCase().replaceAll(/[^0-9DHMS]+/g, ':');

      let r = undefined;
      let d = 0;

      if (r = v.match(/^(\d*):(\d*):(\d*)$/)) {
        d = Number(r[1]) * 60 * 60 + Number(r[2]) * 60 + Number(r[3]);
      } else if (r = v.match(/^(\d+):(\d+)$/)) {
        d = Number(r[1]) * 60 + Number(r[2]);
      } else if (r = v.match(/^(\d+)$/)) {
        d = Number(r[1]);

      } else if (r = v.match(/^(\d+D)?(\d+H)?(\d+M)?(\d+S)?$/)) {
        d = _num(r[1]) * 24 * 60 * 60 + _num(r[2]) * 60 * 60 + _num(r[3]) * 60 + _num(r[4]);
      }
      return (d);
    } // _asSeconds()


    _onChange(/** @type Event */ evt) {
      let d = this._asSeconds(this.value);
      this.value = `${this._f2(d / (60 * 60))}:${this._f2(d % (60 * 60) / 60)}:${this._f2(d % 60)}`;
    }
  } // class
</script>